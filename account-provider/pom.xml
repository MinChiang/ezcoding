<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <artifactId>account-provider</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>account-provider</name>
    <description>用户平台微服务</description>

    <parent>
        <groupId>com.ezcoding</groupId>
        <artifactId>ezcoding-parent</artifactId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>

    <properties>
        <resource.delimiter>@</resource.delimiter>
    </properties>

    <profiles>
        <!-- 本地环境 -->
        <profile>
            <id>local</id>
            <properties>
                <docker.host>http://192.168.123.200:2375</docker.host>
                <environment.name>local</environment.name>
            </properties>
            <activation>
                <!-- 默认激活这个配置 -->
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>

        <!-- 开发环境 -->
        <profile>
            <id>dev</id>
            <properties>
                <docker.host>http://192.168.123.102:2375</docker.host>
                <environment.name>dev</environment.name>
            </properties>
        </profile>

        <!-- 测试环境 -->
        <profile>
            <id>test</id>
            <properties>
                <docker.host>http://192.168.123.102:2375</docker.host>
                <environment.name>test</environment.name>
            </properties>
        </profile>

        <!-- 生产环境 -->
        <profile>
            <id>prod</id>
            <properties>
                <docker.host>http://192.168.123.100:2375</docker.host>
                <environment.name>prod</environment.name>
            </properties>
        </profile>
        <!-- 环境架构end -->

        <!-- 环境类型start -->
        <!-- windows环境 -->
        <profile>
            <id>windows</id>
            <properties>
                <environment.type>windows</environment.type>
            </properties>
        </profile>

        <!-- linux环境 -->
        <profile>
            <id>linux</id>
            <properties>
                <environment.type>linux</environment.type>
            </properties>
            <activation>
                <!-- 默认激活这个配置 -->
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
    </profiles>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <!-- 资源打包插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                    <useDefaultDelimiters>false</useDefaultDelimiters>
                    <delimiters>
                        <delimiter>${resource.delimiter}</delimiter>
                    </delimiters>

                    <!-- 过滤后缀为pem、pfx、p12、dat的证书文件 -->
                    <nonFilteredFileExtensions>
                        <nonFilteredFileExtension>pem</nonFilteredFileExtension>
                        <nonFilteredFileExtension>pfx</nonFilteredFileExtension>
                        <nonFilteredFileExtension>p12</nonFilteredFileExtension>
                        <nonFilteredFileExtension>dat</nonFilteredFileExtension>
                        <nonFilteredFileExtension>cer</nonFilteredFileExtension>
                    </nonFilteredFileExtensions>
                </configuration>
            </plugin>

            <!-- spring boot微服务打包整合插件 -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- docker打包插件 -->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>1.0.0</version>
                <configuration>
                    <!-- 镜像名称，注意此处必须小写 -->
                    <imageName>${project.name}:${project.version}</imageName>
                    <!-- Dockerfile的位置，包含需要进行docker构建命令的文件均存放在此目录下 -->
                    <dockerDirectory>${project.basedir}/src/main/resources/docker</dockerDirectory>
                    <skipDockerBuild>false</skipDockerBuild>
                    <resources>
                        <resource>
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                        <resource>
                            <directory>${project.basedir}/src/main/resources/exec/linux</directory>
                        </resource>
                    </resources>
                    <dockerHost>${docker.host}</dockerHost>
                </configuration>
            </plugin>

            <!-- 自定义打归档文件包 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <descriptors>
                        <descriptor>src/main/resources/assembly/assembly-${environment.type}.xml</descriptor>
                    </descriptors>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <!-- Spring -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>

<!--        <dependency>-->
<!--            <groupId>org.redisson</groupId>-->
<!--            <artifactId>redisson-spring-data-21</artifactId>-->
<!--            <version>3.12.4</version>-->
<!--        </dependency>-->
<!--        <dependency>-->
<!--            <groupId>org.redisson</groupId>-->
<!--            <artifactId>redisson-spring-boot-starter</artifactId>-->
<!--            <version>3.12.4</version>-->
<!--        </dependency>-->

        <!-- 腾讯云SMS -->
        <dependency>
            <groupId>com.github.qcloudsms</groupId>
            <artifactId>qcloudsms</artifactId>
            <version>1.0.5</version>
        </dependency>

        <!-- druid -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid-spring-boot-starter</artifactId>
        </dependency>

        <!-- Mysql -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>

        <dependency>
            <groupId>com.ezcoding</groupId>
            <artifactId>account-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.ezcoding</groupId>
            <artifactId>common-security-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>com.ezcoding</groupId>
            <artifactId>common-mybatis-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>com.ezcoding</groupId>
            <artifactId>common-redis</artifactId>
        </dependency>
    </dependencies>
</project>